<!-- Views/Shared/_RegisterModal.cshtml -->
<div id="registerModal" class="fixed inset-0 bg-black/50 flex items-center justify-center z-50 hidden">
    <div class="bg-white rounded-xl w-full max-w-md shadow-lg p-8 relative">
        <button onclick="closeRegisterModal()" class="absolute top-4 right-4 text-gray-400 hover:text-black text-xl">✕</button>
        <h2 class="text-[#181111] text-2xl font-bold text-center mb-6">Hesap Oluştur</h2>

        <!-- Hata Mesajı -->
        <div id="registerErrorMsg" class="hidden text-center text-red-600 mb-2 text-sm font-semibold"></div>

        <!-- Hesap Tipi -->
        <div class="mb-4 flex items-center gap-4">
            <span class="font-bold">Hesap Tipi</span>
            <label>
                <input type="radio" name="registerType" value="user" checked onchange="toggleStoreFields()" />
                Kullanıcı
            </label>
            <label>
                <input type="radio" name="registerType" value="store" onchange="toggleStoreFields()" />
                Mağaza
            </label>
        </div>

        <div class="mb-4">
            <input id="registerFullName" type="text" placeholder="Ad Soyad / Mağaza Adı"
                   class="form-input w-full rounded-xl bg-[#f4f0f0] h-12 px-4 placeholder:text-[#886363] text-base focus:outline-none" />
        </div>
        <div class="mb-4">
            <input id="registerEmail" type="email" placeholder="E-posta"
                   class="form-input w-full rounded-xl bg-[#f4f0f0] h-12 px-4 placeholder:text-[#886363] text-base focus:outline-none" />
        </div>
        <div class="mb-4">
            <input id="registerPassword" type="password" placeholder="Şifre"
                   class="form-input w-full rounded-xl bg-[#f4f0f0] h-12 px-4 placeholder:text-[#886363] text-base focus:outline-none" />
        </div>
        <div class="mb-4">
            <input id="registerPasswordAgain" type="password" placeholder="Şifreyi Tekrar Girin"
                   class="form-input w-full rounded-xl bg-[#f4f0f0] h-12 px-4 placeholder:text-[#886363] text-base focus:outline-none" />
        </div>
        <!-- Mağaza Ekstra Alanları -->
        <div id="store-extra-fields" class="hidden">
            <div class="mb-4">
                <input id="registerStoreCategory" type="text" placeholder="Mağaza Kategorisi (örn: Pizza, Kebap, Tatlı)"
                       class="form-input w-full rounded-xl bg-[#f4f0f0] h-12 px-4 placeholder:text-[#886363] text-base focus:outline-none" />
            </div>
            <div class="mb-4">
                <input id="registerStorePhone" type="text" placeholder="Telefon Numarası"
                       class="form-input w-full rounded-xl bg-[#f4f0f0] h-12 px-4 placeholder:text-[#886363] text-base focus:outline-none" />
            </div>
            <div class="mb-4">
                <input id="registerStoreAddress" type="text" placeholder="Adres"
                       class="form-input w-full rounded-xl bg-[#f4f0f0] h-12 px-4 placeholder:text-[#886363] text-base focus:outline-none" />
            </div>
            <div class="mb-4">
                <input id="registerStoreDescription" type="text" placeholder="Mağaza Açıklaması"
                       class="form-input w-full rounded-xl bg-[#f4f0f0] h-12 px-4 placeholder:text-[#886363] text-base focus:outline-none" />
            </div>
            <div class="mb-4">
                <input id="registerStoreWorkingHours" type="text" placeholder="Çalışma Saatleri (örn: 09:00-23:00)"
                       class="form-input w-full rounded-xl bg-[#f4f0f0] h-12 px-4 placeholder:text-[#886363] text-base focus:outline-none" />
            </div>
            <!-- Görsel eklemek istersen buraya dosya input ekleyebilirsin -->
        </div>
        <button onclick="handleRegister()" type="button"
                class="w-full bg-[#ea4747] text-white rounded-full h-12 font-bold text-base mb-2">
            Kayıt Ol
        </button>
        <p class="text-center text-[#886363] text-sm underline cursor-pointer mt-2"
           onclick="goToLoginFromRegister()">
            Zaten hesabınız var mı? Giriş Yap
        </p>
    </div>
</div>
<!-- Kayıt başarılı toast -->
<div id="toast-register-success" class="fixed top-4 right-4 z-50 hidden bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded shadow-md transition-opacity duration-500">
    <strong class="font-bold">Başarılı!</strong>
    <span class="block sm:inline">Kayıt başarılı, giriş ekranına yönlendiriliyorsunuz...</span>
</div>

<script>
    function toggleStoreFields() {
        const type = document.querySelector('input[name="registerType"]:checked').value;
        const storeFields = document.getElementById("store-extra-fields");
        if (type === "store") {
            storeFields.classList.remove("hidden");
        } else {
            storeFields.classList.add("hidden");
        }
    }
    document.addEventListener("DOMContentLoaded", toggleStoreFields);

    function showRegisterError(msg) {
        const err = document.getElementById("registerErrorMsg");
        err.textContent = msg;
        err.classList.remove("hidden");
    }
    function clearRegisterError() {
        document.getElementById("registerErrorMsg").classList.add("hidden");
        document.getElementById("registerErrorMsg").textContent = "";
    }
    function openRegisterModal() {
        clearRegisterError();
        document.getElementById("registerModal").classList.remove("hidden");
    }
    function closeRegisterModal() {
        document.getElementById("registerModal").classList.add("hidden");
    }
    function goToLoginFromRegister() {
        closeRegisterModal();
        if (typeof openLoginModal === "function") openLoginModal();
    }

    async function handleRegister() {
        clearRegisterError();
        const name = document.getElementById("registerFullName").value.trim();
        const email = document.getElementById("registerEmail").value.trim();
        const password = document.getElementById("registerPassword").value;
        const passwordAgain = document.getElementById("registerPasswordAgain").value;
        const userType = document.querySelector('input[name="registerType"]:checked').value;

        if (!name || !email || !password || !passwordAgain) {
            showRegisterError("Lütfen tüm alanları doldurun.");
            return;
        }
        if (password !== passwordAgain) {
            showRegisterError("Şifreler eşleşmiyor!");
            return;
        }

        let endpoint = "/api/user/register";
        let bodyObj = { fullName: name, email, password };

        if (userType === "store") {
            const category = document.getElementById("registerStoreCategory").value.trim();
            const phone = document.getElementById("registerStorePhone").value.trim();
            const address = document.getElementById("registerStoreAddress").value.trim();
            const description = document.getElementById("registerStoreDescription").value.trim();
            const workingHours = document.getElementById("registerStoreWorkingHours").value.trim();

            if (!category || !phone || !address || !description || !workingHours) {
                showRegisterError("Lütfen tüm mağaza alanlarını doldurun.");
                return;
            }
            endpoint = "/api/store/register";
            bodyObj = {
                name: name,
                email: email,
                password: password,
                category: category,
                phone: phone,
                address: address,
                description: description,
                workingHours: workingHours,
                // Görsel URL'si otomatik atanacak, eklemek istemiyorsan yollama!
                id: 0
            };
        }

        try {
            const response = await fetch(endpoint, {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify(bodyObj)
            });

            if (!response.ok) {
                let errorMsg = "Kayıt başarısız.";
                try {
                    const data = await response.json();
                    if (data.errors) {
                        errorMsg = Object.values(data.errors).flat().join(" ");
                    } else if (data.title) {
                        errorMsg = data.title;
                    }
                } catch { }
                showRegisterError(errorMsg);
                return;
            }

            document.getElementById("toast-register-success").classList.remove("hidden");
            setTimeout(() => {
                document.getElementById("toast-register-success").classList.add("hidden");
                closeRegisterModal();
                if (typeof openLoginModal === "function") openLoginModal();
            }, 1300);
        } catch (e) {
            showRegisterError("Sunucu hatası! " + e);
        }
    }
</script>
