<!-- Views/Shared/_LoginModal.cshtml -->
<div id="loginModal" class="fixed inset-0 bg-black/50 flex items-center justify-center z-50 hidden">
    <div class="bg-white rounded-xl w-full max-w-md shadow-lg p-8 relative">
        <button onclick="closeLoginModal()" class="absolute top-4 right-4 text-gray-400 hover:text-black text-xl">✕</button>
        <h2 class="text-[#181111] text-2xl font-bold text-center mb-6">Giriş Yap</h2>

        <!-- Hata Mesajı -->
        <div id="loginErrorMsg" class="hidden text-center text-red-600 mb-2 text-sm font-semibold"></div>

        <!-- Hesap Tipi -->
        <div class="mb-4 flex items-center gap-4">
            <span class="font-bold">Hesap Tipi</span>
            <label>
                <input type="radio" name="loginType" value="user" checked onchange="toggleLoginTypeFields()" />
                Kullanıcı
            </label>
            <label>
                <input type="radio" name="loginType" value="store" onchange="toggleLoginTypeFields()" />
                Mağaza
            </label>
        </div>

        <div class="mb-4">
            <input id="loginEmail" type="email" placeholder="E-posta"
                   class="form-input w-full rounded-xl bg-[#f4f0f0] h-12 px-4 placeholder:text-[#886363] text-base focus:outline-none" />
        </div>
        <div class="mb-4">
            <input id="loginPassword" type="password" placeholder="Şifre"
                   class="form-input w-full rounded-xl bg-[#f4f0f0] h-12 px-4 placeholder:text-[#886363] text-base focus:outline-none" />
        </div>

        <button onclick="handleLogin()" type="button"
                class="w-full bg-[#ea4747] text-white rounded-full h-12 font-bold text-base mb-2">
            Giriş Yap
        </button>
        <p class="text-center text-[#886363] text-sm underline cursor-pointer mt-2"
           onclick="goToRegisterFromLogin()">
            Hesabınız yok mu? Kayıt Ol
        </p>
    </div>
</div>
<div id="toast-login-success" class="fixed top-4 right-4 z-50 hidden bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded shadow-md transition-opacity duration-500">
    <strong class="font-bold">Başarılı!</strong>
    <span class="block sm:inline">Giriş başarılı, yönlendiriliyorsunuz...</span>
</div>

<script>
    // Login işlemi sonrası cookie oluşturma
    var cookieOptions = new CookieOptions
    {
        HttpOnly = true,
            Secure = true, // HTTPS kullanıyorsanız true yapın
            SameSite = SameSiteMode.Lax, // veya Strict
            Expires = DateTime.UtcNow.AddDays(1),
            Domain = "localhost", // Production'da domaininizi ekleyin
            Path = "/" // Tüm path'lerde geçerli
    };

    Response.Cookies.Append("token", jwtToken, cookieOptions);
    function toggleLoginTypeFields() {
        // İleride kullanıcı/store için ayrı alanlar ekleyeceksen buraya ekleyebilirsin.
    }
    document.addEventListener("DOMContentLoaded", toggleLoginTypeFields);

    function showLoginError(msg) {
        const err = document.getElementById("loginErrorMsg");
        err.textContent = msg;
        err.classList.remove("hidden");
    }
    function clearLoginError() {
        document.getElementById("loginErrorMsg").classList.add("hidden");
        document.getElementById("loginErrorMsg").textContent = "";
    }

    function openLoginModal() {
        clearLoginError();
        document.getElementById("loginModal").classList.remove("hidden");
    }
    function closeLoginModal() {
        document.getElementById("loginModal").classList.add("hidden");
    }
    function goToRegisterFromLogin() {
        closeLoginModal();
        if (typeof openRegisterModal === "function") openRegisterModal();
    }

    async function handleLogin() {
        clearLoginError();
        const email = document.getElementById("loginEmail").value.trim();
        const password = document.getElementById("loginPassword").value;
        const loginType = document.querySelector('input[name="loginType"]:checked').value;

        if (!email || !password) {
            showLoginError("Lütfen tüm alanları doldurun.");
            return;
        }

        let endpoint = "/api/user/login";
        let bodyObj = { email, password };
        if (loginType === "store") {
            endpoint = "/api/store/login";
        }

        try {
            const response = await fetch(endpoint, {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify(bodyObj)
            });

            if (!response.ok) {
                let errorMsg = "Giriş başarısız.";
                try {
                    const data = await response.json();
                    if (data.errors) errorMsg = Object.values(data.errors).flat().join(" ");
                    else if (data.title) errorMsg = data.title;
                } catch { }
                showLoginError(errorMsg);
                return;
            }

            const data = await response.json();
            if (data.token) {
                localStorage.setItem("token", data.token);
                document.cookie = "token=" + data.token + "; path=/";
            }

            document.getElementById("toast-login-success").classList.remove("hidden");
            setTimeout(() => {
                document.getElementById("toast-login-success").classList.add("hidden");
                closeLoginModal();
                window.location.reload();
            }, 1200);
        } catch (e) {
            showLoginError("Sunucu hatası! " + e);
        }
    }
</script>
