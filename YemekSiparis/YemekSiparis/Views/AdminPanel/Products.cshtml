@{
    ViewData["Title"] = "Ürün Yönetimi";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="space-y-6">
    <!-- Header -->
    <div class="flex justify-between items-center">
        <div>
            <h2 class="text-2xl font-bold text-gray-900">Ürün Yönetimi</h2>
            <p class="text-gray-600">Tüm ürünleri görüntüleyin ve yönetin</p>
        </div>
        <div class="flex space-x-3">
            <button onclick="refreshProducts()" class="px-4 py-2 bg-gray-100 text-gray-700 rounded-lg hover:bg-gray-200 transition-colors">
                <i class="fas fa-refresh mr-2"></i>
                Yenile
            </button>
        </div>
    </div>

    <!-- Search and Filters -->
    <div class="bg-white rounded-xl shadow-sm border border-gray-100 p-6">
        <div class="grid grid-cols-1 md:grid-cols-4 gap-4">
            <div>
                <label class="block text-sm font-medium text-gray-700 mb-2">Ürün Ara</label>
                <div class="relative">
                    <input 
                        type="text" 
                        id="searchInput" 
                        placeholder="Ürün adı ile ara..."
                        class="w-full pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-admin-primary focus:border-transparent"
                        oninput="filterProducts()"
                    >
                    <i class="fas fa-search absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400"></i>
                </div>
            </div>
            <div>
                <label class="block text-sm font-medium text-gray-700 mb-2">Kategori</label>
                <select id="categoryFilter" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-admin-primary focus:border-transparent" onchange="filterProducts()">
                    <option value="">Tüm Kategoriler</option>
                    <option value="Kebap">Kebap</option>
                    <option value="Pizza">Pizza</option>
                    <option value="Burger">Burger</option>
                    <option value="Tatlı">Tatlı</option>
                    <option value="İçecek">İçecek</option>
                    <option value="Ana Yemek">Ana Yemek</option>
                    <option value="Aperatif">Aperatif</option>
                </select>
            </div>
            <div>
                <label class="block text-sm font-medium text-gray-700 mb-2">Fiyat Aralığı</label>
                <select id="priceFilter" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-admin-primary focus:border-transparent" onchange="filterProducts()">
                    <option value="">Tüm Fiyatlar</option>
                    <option value="0-25">₺0 - ₺25</option>
                    <option value="25-50">₺25 - ₺50</option>
                    <option value="50-100">₺50 - ₺100</option>
                    <option value="100+">₺100+</option>
                </select>
            </div>
            <div>
                <label class="block text-sm font-medium text-gray-700 mb-2">Sıralama</label>
                <select id="sortOrder" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-admin-primary focus:border-transparent" onchange="sortProducts()">
                    <option value="name">İsme göre (A-Z)</option>
                    <option value="name-desc">İsme göre (Z-A)</option>
                    <option value="price">Fiyata göre (Artan)</option>
                    <option value="price-desc">Fiyata göre (Azalan)</option>
                    <option value="stock">Stok durumuna göre</option>
                </select>
            </div>
        </div>
    </div>

    <!-- Products Grid -->
    <div id="productsContainer">
        <div class="text-center py-12">
            <i class="fas fa-spinner fa-spin text-4xl text-gray-400 mb-4"></i>
            <p class="text-gray-500">Ürünler yükleniyor...</p>
        </div>
    </div>
</div>

<!-- Product Details Modal -->
<div id="productModal" class="hidden fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
    <div class="bg-white rounded-xl shadow-xl w-full max-w-2xl m-4 max-h-screen overflow-y-auto">
        <div class="p-6 border-b border-gray-100">
            <div class="flex justify-between items-center">
                <h3 class="text-lg font-semibold text-gray-900">Ürün Detayları</h3>
                <button onclick="closeProductModal()" class="text-gray-400 hover:text-gray-600">
                    <i class="fas fa-times"></i>
                </button>
            </div>
        </div>
        <div class="p-6">
            <div id="productModalContent">
                <!-- Content will be populated by JavaScript -->
            </div>
        </div>
        <div class="px-6 py-4 bg-gray-50 rounded-b-xl">
            <div class="flex justify-end space-x-3">
                <button onclick="closeProductModal()" class="px-4 py-2 text-gray-700 bg-gray-200 rounded-lg hover:bg-gray-300 transition-colors">
                    Kapat
                </button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
<script>
    let allProducts = [];
    let filteredProducts = [];
    let allStores = [];

    async function loadProducts() {
        try {
            const productsContainer = document.getElementById('productsContainer');
            productsContainer.innerHTML = `
                <div class="text-center py-12">
                    <i class="fas fa-spinner fa-spin text-4xl text-gray-400 mb-4"></i>
                    <p class="text-gray-500">Ürünler yükleniyor...</p>
                </div>
            `;

            // Load stores first to get their products
            allStores = await adminAPI.getStores();
            
            // Extract all products from all stores
            allProducts = [];
            allStores.forEach(store => {
                if (store.products && Array.isArray(store.products)) {
                    store.products.forEach(product => {
                        allProducts.push({
                            ...product,
                            storeName: store.name,
                            storeId: store.id
                        });
                    });
                }
            });

            filteredProducts = [...allProducts];
            renderProductsGrid();
        } catch (error) {
            console.error('Error loading products:', error);
            const productsContainer = document.getElementById('productsContainer');
            productsContainer.innerHTML = `
                <div class="text-center py-12">
                    <i class="fas fa-exclamation-triangle text-4xl text-red-400 mb-4"></i>
                    <p class="text-red-500">Ürünler yüklenirken bir hata oluştu.</p>
                    <button onclick="loadProducts()" class="mt-4 px-4 py-2 bg-admin-primary text-white rounded-lg hover:bg-admin-secondary transition-colors">
                        Tekrar Dene
                    </button>
                </div>
            `;
        }
    }

    function renderProductsGrid() {
        const container = document.getElementById('productsContainer');
        
        if (filteredProducts.length === 0) {
            container.innerHTML = `
                <div class="text-center py-12">
                    <i class="fas fa-box text-6xl text-gray-300 mb-4"></i>
                    <p class="text-gray-500">Ürün bulunamadı</p>
                </div>
            `;
            return;
        }

        container.innerHTML = `
            <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6">
                ${filteredProducts.map(product => `
                    <div class="bg-white rounded-xl shadow-sm border border-gray-100 overflow-hidden hover:shadow-md transition-shadow">
                        <div class="aspect-w-1 aspect-h-1 bg-gray-200">
                            ${product.imageUrl ? 
                                `<img src="${product.imageUrl}" alt="${product.name}" class="w-full h-48 object-cover">` :
                                `<div class="w-full h-48 bg-gradient-to-br from-gray-100 to-gray-200 flex items-center justify-center">
                                    <i class="fas fa-utensils text-4xl text-gray-400"></i>
                                </div>`
                            }
                        </div>
                        <div class="p-4">
                            <div class="mb-2">
                                <h3 class="text-lg font-semibold text-gray-900 mb-1 line-clamp-1">${product.name}</h3>
                                <p class="text-sm text-admin-primary">${product.storeName}</p>
                            </div>
                            
                            <p class="text-sm text-gray-600 mb-3 line-clamp-2">${product.description || 'Açıklama bulunmuyor'}</p>
                            
                            <div class="flex items-center justify-between text-sm text-gray-500 mb-3">
                                <div class="flex items-center">
                                    <i class="fas fa-tag mr-1"></i>
                                    <span>${product.category || 'Kategori yok'}</span>
                                </div>
                                <div class="flex items-center">
                                    <i class="fas fa-boxes mr-1"></i>
                                    <span>${product.stock || 0} adet</span>
                                </div>
                            </div>
                            
                            <div class="flex items-center justify-between">
                                <div class="text-lg font-bold text-green-600">
                                    ₺${product.price ? product.price.toFixed(2) : '0.00'}
                                </div>
                                <button onclick="viewProduct(${product.id})" class="px-3 py-1 bg-admin-primary text-white text-sm rounded-lg hover:bg-admin-secondary transition-colors">
                                    <i class="fas fa-eye mr-1"></i>
                                    Detay
                                </button>
                            </div>
                        </div>
                    </div>
                `).join('')}
            </div>
        `;
    }

    function filterProducts() {
        const searchTerm = document.getElementById('searchInput').value.toLowerCase();
        const categoryFilter = document.getElementById('categoryFilter').value;
        const priceFilter = document.getElementById('priceFilter').value;

        filteredProducts = allProducts.filter(product => {
            const matchesSearch = product.name.toLowerCase().includes(searchTerm) ||
                                (product.description && product.description.toLowerCase().includes(searchTerm));
            const matchesCategory = !categoryFilter || product.category === categoryFilter;
            
            let matchesPrice = true;
            if (priceFilter) {
                const price = product.price || 0;
                switch (priceFilter) {
                    case '0-25':
                        matchesPrice = price >= 0 && price <= 25;
                        break;
                    case '25-50':
                        matchesPrice = price > 25 && price <= 50;
                        break;
                    case '50-100':
                        matchesPrice = price > 50 && price <= 100;
                        break;
                    case '100+':
                        matchesPrice = price > 100;
                        break;
                }
            }
            
            return matchesSearch && matchesCategory && matchesPrice;
        });

        renderProductsGrid();
    }

    function sortProducts() {
        const sortOrder = document.getElementById('sortOrder').value;

        filteredProducts.sort((a, b) => {
            switch (sortOrder) {
                case 'name':
                    return a.name.localeCompare(b.name);
                case 'name-desc':
                    return b.name.localeCompare(a.name);
                case 'price':
                    return (a.price || 0) - (b.price || 0);
                case 'price-desc':
                    return (b.price || 0) - (a.price || 0);
                case 'stock':
                    return (b.stock || 0) - (a.stock || 0);
                default:
                    return 0;
            }
        });

        renderProductsGrid();
    }

    function viewProduct(productId) {
        const product = allProducts.find(p => p.id === productId);
        if (!product) return;

        const modalContent = document.getElementById('productModalContent');
        modalContent.innerHTML = `
            <div class="space-y-6">
                <div class="flex flex-col md:flex-row gap-6">
                    <div class="md:w-1/3">
                        ${product.imageUrl ? 
                            `<img src="${product.imageUrl}" alt="${product.name}" class="w-full h-48 object-cover rounded-lg">` :
                            `<div class="w-full h-48 bg-gradient-to-br from-gray-100 to-gray-200 rounded-lg flex items-center justify-center">
                                <i class="fas fa-utensils text-4xl text-gray-400"></i>
                            </div>`
                        }
                    </div>
                    <div class="md:w-2/3">
                        <h4 class="text-xl font-semibold text-gray-900 mb-2">${product.name}</h4>
                        <p class="text-admin-primary font-medium mb-4">${product.storeName}</p>
                        
                        <div class="grid grid-cols-2 gap-4 mb-4">
                            <div>
                                <span class="text-sm font-medium text-gray-500">Fiyat</span>
                                <p class="text-2xl font-bold text-green-600">₺${product.price ? product.price.toFixed(2) : '0.00'}</p>
                            </div>
                            <div>
                                <span class="text-sm font-medium text-gray-500">Stok</span>
                                <p class="text-lg font-semibold text-gray-900">${product.stock || 0} adet</p>
                            </div>
                        </div>
                        
                        <div class="space-y-2">
                            <div>
                                <span class="text-sm font-medium text-gray-500">Kategori</span>
                                <p class="text-sm text-gray-900">${product.category || 'Belirtilmemiş'}</p>
                            </div>
                            <div>
                                <span class="text-sm font-medium text-gray-500">Ürün ID</span>
                                <p class="text-sm text-gray-900">#${product.id}</p>
                            </div>
                            <div>
                                <span class="text-sm font-medium text-gray-500">Mağaza ID</span>
                                <p class="text-sm text-gray-900">#${product.storeId}</p>
                            </div>
                        </div>
                    </div>
                </div>
                
                ${product.description ? `
                    <div>
                        <h5 class="font-semibold text-gray-900 mb-2">Açıklama</h5>
                        <p class="text-sm text-gray-700 leading-relaxed">${product.description}</p>
                    </div>
                ` : ''}
                
                <div class="bg-gray-50 rounded-lg p-4">
                    <h5 class="font-semibold text-gray-900 mb-3">Durum</h5>
                    <div class="flex items-center justify-between">
                        <span class="text-sm text-gray-600">Stok Durumu</span>
                        <span class="inline-flex px-2 py-1 text-xs font-semibold rounded-full ${(product.stock || 0) > 0 ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'}">
                            ${(product.stock || 0) > 0 ? 'Stokta' : 'Tükendi'}
                        </span>
                    </div>
                </div>
            </div>
        `;

        document.getElementById('productModal').classList.remove('hidden');
    }

    function closeProductModal() {
        document.getElementById('productModal').classList.add('hidden');
    }

    function refreshProducts() {
        loadProducts();
    }

    // Load products on page load
    document.addEventListener('DOMContentLoaded', loadProducts);
</script>
}